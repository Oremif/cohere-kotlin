package org.oremif.cohere.api.response

import kotlinx.serialization.Serializable
import org.oremif.cohere.api.types.Citation
import org.oremif.cohere.api.types.FinishReason
import org.oremif.cohere.api.types.Message
import org.oremif.cohere.api.types.MetaInfo
import org.oremif.cohere.api.types.SearchQuery
import org.oremif.cohere.api.types.SearchResult
import org.oremif.cohere.api.types.ToolCall

/**
 * @property text Contents of the reply generated by the model.
 * @property generationId Unique identifier for the generated reply. Useful for submitting feedback.
 * @property citations Inline citations for the generated reply.
 * @property documents Documents seen by the model when generating the reply.
 * @property isSearchRequired Denotes that a search for documents is required during the RAG flow.
 * @property searchQueries Generated search queries, meant to be used as part of the RAG flow.
 * @property searchResults Documents retrieved from each of the conducted searches.
 * @property finishReason
 * @property toolCalls
 * @property chatHistory A list of previous messages between the user and the model, meant to give the model conversational context for responding to the user's `message`.
 * @property meta
 */
@Serializable
public data class ChatResponse(
    val text: String,
    val generationId: String? = null,
    val citations: List<Citation>? = null,
    val documents: List<Map<String, String>>? = null,
    val isSearchRequired: Boolean? = null,
    val searchQueries: List<SearchQuery>? = null,
    val searchResults: List<SearchResult>? = null,
    val finishReason: FinishReason? = null,
    val toolCalls: List<ToolCall>? = null,
    val chatHistory: List<Message>? = null,
    val meta: MetaInfo? = null
)
